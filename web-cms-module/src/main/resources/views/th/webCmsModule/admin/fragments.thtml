<html xmlns:th="http://www.w3.org/1999/xhtml">

<!--/* Renders the Admin UI form group for a component model (container or not) */-->
<div th:fragment="componentModelFormElement(element,model)"
     class="form-group wcm-component-form-group"
     th:classappend="${element.showAsLinkedComponent} ? 'wcm-linked-component'"
     th:data-wcm-component-id="${model.objectId}"
     th:with="htmlId=${#ids.seq('component-tab')}">
    <div class="pull-right">
        <ul class="wcm-component-tabs" th:unless="${element.showAsLinkedComponent}">
            <li th:if="${element.showAddComponentButton}">
                <a th:href="@{@adminWeb:/entities/webCmsComponent/create(view=createMember,entity.ownerObjectId=${model.objectId},from=${currentComponentUrl})}" title="Add a component to this container"><span class="glyphicon glyphicon-plus-sign"></span></a>
            </li>
            <li th:if="${element.hasMembers()}">
                <a th:href="${'#members-' + htmlId}" title="Update container members" data-wcm-component-tab="members"><span class="glyphicon glyphicon-option-vertical"></span></a>
            </li>
            <li th:if="${element.hasContent()}" class="content-tab component-tab-link-default">
                <a th:href="${'#content-' + htmlId}" title="Update content" data-wcm-component-tab="content"><span class="glyphicon glyphicon-pencil"></span></a>
            </li>
            <li th:if="${element.hasMetadata()}">
                <a th:href="${'#metadata-' + htmlId}" title="Update component attributes" data-wcm-component-tab="metadata"><span class="glyphicon glyphicon-th-list"></span></a>
            </li>
            <li th:if="${element.hasSettings()}">
                <a th:href="${'#settings-' + htmlId}" title="Basic settings" data-wcm-component-tab="settings"><span class="glyphicon glyphicon-cog"></span></a>
            </li>
            <li th:if="${element.showDeleteButton}">
                <a th:href="@{${'@adminWeb:/entities/webCmsComponent/' + model.component.id + '/delete'}(from=${currentComponentUrl})}"><span class="glyphicon glyphicon-remove"></span></a>
            </li>
        </ul>
        <ul class="wcm-component-tabs" th:if="${element.showAsLinkedComponent}">
            <li>
                <a th:href="@{${componentLinkBuilder.update(model.component)}(from=${currentComponentUrl})}"><span class="glyphicon glyphicon-edit"></span></a>
            </li>
            <li th:if="${element.showDeleteButton}">
                <a th:href="@{${'@adminWeb:/entities/webCmsComponent/' + model.component.id + '/delete'}(from=${currentComponentUrl})}"><span class="glyphicon glyphicon-remove"></span></a>
            </li>
        </ul>
    </div>
    <span class="wcm-sortable-component-handle glyphicon glyphicon-menu-hamburger"></span>
    <label class="control-label" th:title="${model.name}"
           th:text="${#strings.isEmpty(model.title) ? model.componentType.name : model.title}">Component title</label>
    <!--/* content */-->
    <div th:if="${element.hasContent()}" class="wcm-component-tab-pane wcm-component-content-tab" th:id="${'content-' + htmlId}">
        <across:view element="${element.content}"/>
    </div>
    <!--/* members */-->
    <div th:if="${element.hasMembers()}" class="wcm-component-tab-pane wcm-component-members-tab"
         th:classappend="${element.sortableContainer} ? 'wcm-sortable-component'" th:id="${'members-' + htmlId}">
        <h5 th:id="${element.sortableContainer}" class="wcm-sortable-component-title">Drag the container members to reorder them.</h5>
        <across:view element="${element.members}"/>
    </div>
    <!--/* metadata */-->
    <div th:if="${element.hasMetadata()}" class="wcm-component-tab-pane wcm-component-metadata-tab" th:id="${'metadata-' + htmlId}">
        <across:view element="${element.metadata}"/>
    </div>
    <!--/* settings */-->
    <div th:if="${element.hasSettings()}" class="wcm-component-tab-pane wcm-component-settings-tab" th:id="${'settings-' + htmlId}">
        <across:view element="${element.settings}"/>
    </div>
    <across:view th:each="child : ${element.children}" element="${child}"/>
</div>

</html>
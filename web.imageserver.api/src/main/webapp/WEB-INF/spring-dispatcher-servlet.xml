<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config />

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:/config/${environment.type}/common.properties</value>
                <value>file:/config-override/imageserver/api.properties</value>
            </list>
        </property>
    </bean>

	<bean class="com.foreach.imageserver.example.front.APIController">
		<property name="appUrl" value="${connection.appUrl}"/>
		<property name="authKey" value="${connection.authKey}"/>
		<property name="managementUrl" value="${connection.managementUrl}"/>
	</bean>


    <mvc:interceptors>
        <!-- Set global variables if all other interceptors have passed (they could modify settings first) -->
        <bean class="com.foreach.imageserver.example.utils.GlobalVariableInterceptor"/>
        <!-- Disable client caching on all requests (to be finetuned) -->
        <bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0"/>
            <property name="useExpiresHeader" value="true"/>
            <property name="useCacheControlHeader" value="true"/>
            <property name="useCacheControlNoStore" value="true"/>
        </bean>
    </mvc:interceptors>

    <bean class="com.foreach.imageserver.example.utils.WebPathConfiguration">
        <property name="siteRoot" value="${path.siteRoot}"/>
        <property name="resources" value="${path.resources}"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
		<property name="redirectContextRelative" value="true"/>
		<property name="order" value="1"/>
	</bean>

    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="uploadTempDir" ref="uploadDirResource" />
    </bean>

    <bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg>
            <value>C:/imageserver/images</value>
        </constructor-arg>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="useDefaultSuffixPattern" value="false" />
    </bean>

    <bean class="com.foreach.spring.logging.Log4JConfigurator" init-method="configure" lazy-init="false">
        <property name="propertiesFile" value="${log.properties}"/>
        <property name="logDirectory" value="${log.dir}"/>
    </bean>

</beans>